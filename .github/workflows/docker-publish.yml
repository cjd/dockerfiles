name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '32 3 1 * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
  # pull_request:
  #   branches: [ "main" ]

env:
  DOCKERHUB_NAMESPACE: ${{ github.repository_owner }}

jobs:
  build:
  
    strategy:
      matrix:
        image:
          - dhcp-helper
          - dns2hosts
          - dnsmasq
          - dock2dns
          - dosage
          - godaddy
          - honeypot
          - k8s-backup
          - k8s-restore
          - kiosk
          - miiocli
          - nginx
          - ntopng
          - ntpd
          - nvim
          - php
          - rsync
          - rtl_433_discovery
          - socat
          - spice-client
          - sslh
          - tftpd
          - vdoninja
      
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.9.1

      # Login to Docker Hub and GHCR except on PR
      # https://github.com/docker/login-action

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Log in to GHCR registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set documentation URL property
        run: |
          [ -r "${{ matrix.image}}/README.md" ] && README_PREFIX="${{ matrix.image }}/"
          echo "README_PATH=${README_PREFIX}README.md" >> "$GITHUB_ENV"

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          labels: |
            org.opencontainers.image.title=${{ matrix.image }} image by github.com/${{ github.repository_owner }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/${{ matrix.image }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/${{ env.README_PATH }}
          images: |
            ${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.image }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          context: ./${{ matrix.image }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}      
